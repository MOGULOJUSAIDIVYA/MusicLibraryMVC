// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Music.DataAccess;

namespace Music.DataAccess.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20200214160551_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("Music.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComposerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ComposerId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComposerId = 1,
                            Genre = "Soundtrack",
                            Name = "Spiderman"
                        },
                        new
                        {
                            Id = 2,
                            ComposerId = 2,
                            Genre = "Instrumental",
                            Name = "How to name it"
                        });
                });

            modelBuilder.Entity("Music.Models.Composer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Composers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hans Zimmer",
                            Phone = "8823923232"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ilayaraja",
                            Phone = "8923232323"
                        });
                });

            modelBuilder.Entity("Music.Models.Album", b =>
                {
                    b.HasOne("Music.Models.Composer", "Composer")
                        .WithMany("Albums")
                        .HasForeignKey("ComposerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
